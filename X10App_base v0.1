import 'dart:async';
import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'package:flutter_ringtone_player/flutter_ringtone_player.dart';

void main() => runApp(MyApp());

class MyApp extends StatefulWidget {
  @override
  _MyAppState createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> {
  String _ngrokUrl = ''; // Add a state variable to store the NGROK URL entered by the user
  bool _isButtonDisabled = false;
  int _buttonCountdown = 0;
  Timer? _buttonTimer;

  Future<void> _sendRequest(String path) async {
    setState(() {
      _isButtonDisabled = true;
      _buttonCountdown = 3;
      _buttonTimer = Timer.periodic(Duration(seconds: 1), (timer) {
        setState(() {
          _buttonCountdown--;
        });
        if (_buttonCountdown == 0) {
          setState(() {
            _isButtonDisabled = false;
          });
          _buttonTimer?.cancel();
        }
      });
    });

    final url = Uri.parse('$_ngrokUrl$path');
    try {
      final response = await http.get(url);
      print('Response status: ${response.statusCode}');
      print('Response body: ${response.body}');
      FlutterRingtonePlayer.playNotification(); // Play the default Android notification sound if the request is successful
    } catch (e) {
      print('Error sending request: $e');
    }
  }


  @override
  void dispose() {
    _buttonTimer?.cancel();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'My App',
      home: Scaffold(
        appBar: AppBar(
          title: Text('My App'),
        ),
        body: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              TextField(
                onChanged: (value) {
                  setState(() {
                    _ngrokUrl = value;
                  });
                },
                decoration: InputDecoration(
                  labelText: 'Enter NGROK URL',
                ),
              ),
              SizedBox(height: 20),
              Row(
                mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                children: [
                  ElevatedButton(
                    onPressed: _isButtonDisabled
                        ? null
                        : () => _sendRequest('http://192.168.4.1/ON'),
                    child: _isButtonDisabled
                        ? Text('ON ($_buttonCountdown)')
                        : Text('ON'),
                  ),
                  ElevatedButton(
                    onPressed: _isButtonDisabled
                        ? null
                        : () => _sendRequest('http://192.168.4.1/OFF'),
                    child: _isButtonDisabled
                        ? Text('OFF ($_buttonCountdown)')
                        : Text('OFF'),
                  ),
                ],
              ),
            ],
          ),
        ),
      ),
    );
  }
}
